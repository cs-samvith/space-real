trigger:
  batch: true
  branches:
    include:
      - main
  paths:
    include:
      - /quiz-microsite/src/*
      - /quiz-microsite/aks/*

pr: none

pool:
  vmImage: ubuntu-latest

variables:
  imageRepository: "quiz-microsite-real"
  containerRegistry: spacedevacr.azurecr.io
  # tag: "$(Build.BuildNumber)"
  service_connection: ARM_SERVICE_CONNECTION
  kubernetesServiceConnection: "spaceaks"
  # k8sNamespace: "dev"

stages:
  - stage: Dev
    variables:
      k8sNamespace: dev
      tag: "$(Build.BuildNumber)-dev"
    jobs:
      - job: Build
        steps:
          - task: PowerShell@2
            displayName: "Insert System Info"
            inputs:
              targetType: "inline"
              script: |
                $json='[{
                    "ApplicationName": "Microsite",
                    "CloudInfra": "azure kubernetes service",
                    "DevOpsTool": "azure devOps",
                    "Environment": "dev",
                    "InstanceName": "cloud",
                    "ImageTag": "$(imageRepository):${{variables.tag}}"
                }]'
                $json | Out-File $(System.DefaultWorkingDirectory)/quiz-microsite/microsite/src/system/info.json
              workingDirectory: "$(System.DefaultWorkingDirectory)"
              pwsh: true # For Linux

          - task: Docker@2
            name: docker_build_and_push
            displayName: docker build and push
            inputs:
              containerRegistry: $(containerRegistry)
              repository: $(imageRepository)
              command: "buildAndPush"
              Dockerfile: "quiz-microsite/microsite/Dockerfile"
              tags: |
                latest
                ${{variables.tag}}
      - job: Deploy
        dependsOn:
          - Build
        steps:
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              namespace: ${{variables.k8sNamespace}}
              kubernetesServiceConnection: $(kubernetesServiceConnection)
              manifests: |
                $(System.DefaultWorkingDirectory)/quiz-microsite/aks/manifests/deployment.yml
                $(System.DefaultWorkingDirectory)/quiz-microsite/aks/manifests/service.yml
                $(System.DefaultWorkingDirectory)/quiz-microsite/aks/manifests/service-lb.yml
              containers: |
                $(containerRegistry)/$(imageRepository):${{variables.tag}}

  - stage: Qa
    variables:
      k8sNamespace: qa
      tag: "$(Build.BuildNumber)-qa"
    dependsOn:
      - Dev
    jobs:
      - job: Build
        steps:
          - task: PowerShell@2
            displayName: "Insert System Info"
            inputs:
              targetType: "inline"
              script: |
                $json='[{
                    "ApplicationName": "Microsite",
                    "CloudInfra": "azure kubernetes service",
                    "DevOpsTool": "azure devOps",
                    "Environment": "qa",
                    "InstanceName": "cloud",
                    "ImageTag": "$(imageRepository):${{variables.tag}}"
                }]'
                $json | Out-File -Force $(System.DefaultWorkingDirectory)/quiz-microsite/microsite/src/system/info.json
              workingDirectory: "$(System.DefaultWorkingDirectory)"
              pwsh: true # For Linux

          - task: Docker@2
            name: docker_build_and_push
            displayName: docker build and push
            inputs:
              containerRegistry: $(containerRegistry)
              repository: $(imageRepository)
              command: "buildAndPush"
              Dockerfile: "quiz-microsite/microsite/Dockerfile"
              tags: |
                latest
                ${{variables.tag}}
      - job: Deploy
        dependsOn:
          - Build
        steps:
          - task: KubernetesManifest@0
            displayName: Deploy to Kubernetes cluster
            inputs:
              action: deploy
              namespace: ${{variables.k8sNamespace}}
              kubernetesServiceConnection: $(kubernetesServiceConnection)
              manifests: |
                $(System.DefaultWorkingDirectory)/quiz-microsite/aks/manifests/deployment.yml
                $(System.DefaultWorkingDirectory)/quiz-microsite/aks/manifests/service.yml
                $(System.DefaultWorkingDirectory)/quiz-microsite/aks/manifests/service-lb.yml
              containers: |
                $(containerRegistry)/$(imageRepository):${{variables.tag}}
